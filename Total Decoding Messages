/*Total Decoding Messages*


A top secret message containing letters from A-Z is being 
encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
You are an FBI agent. You have to determine the total number of ways 
that message can be decoded, as the answer can be large return the answer modulo 109 + 7.

*/

class Solution {
    int mx=1e9+7;
    int dp[10001];
    int solve(string x,int i)
    {
        
        if(i>=x.size())
        {
            return 1;
        }
        if(x[i]=='0')//if value is 0 then return 0;
        {
            return 0;
        }
        if(dp[i]!=-1)
        {
            return dp[i];
        }
        int ways=0,way2=0;
        ways+=solve(x,i+1);//take one by one 
        if(i+1<x.size()&&(x[i]=='2'&&x[i+1]<='6'||x[i]=='1'&&x[i+1]<='9'))//take 2 indices and jump next.
        {
            //cout<<x[i]<<" "<<x[i+1]<<"\n";
            ways+=solve(x,i+2);
        }
        return dp[i]=(ways)%mx;
        
    }
	public:
		int CountWays(string str){
		    // Code here
		    if(str.size()==1)
		    {
		        if(str[0]=='0')
		        {
		            return 0;
		        }
		        return 1;
		    }
            for(int i=1;i<str.size();i++)
            {
                if((str[i-1]>='3'||str[i-1]=='0')&&str[i]=='0'||str[0]=='0')
                {
                    return 0;
                }
            }
            memset(dp,-1,sizeof(dp));
		    return solve(str,0);
		}

};
